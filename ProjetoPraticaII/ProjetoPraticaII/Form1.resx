<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAXZ3UAFGtpAB9cmAAOclQAIFyYAB5ekgAVam0AGmODABFvXgAYZnoAIFyZAB9dlgAdYI0ADHZJAA9x
        WQAYZnsADXRQAB9elAADgSgAEm5jACBdmAAgXZkAIF2aAB9elwAfX5QAH1+VACBemQAeYJMAHWGQACBe
        mgAfX5cAH2CUAB9fmAAfYJUAHmGSACFfmQAiX5kAHWOOAB9hlQAeY5QAGmiFAB5kkgAaaYMAGmmEAB1m
        jgAiYpoAH2SVABxnjQAiY5kAHmWUAB5mkQAdZ44AGGx/AB5llQAjZJgAH2WWAB5mkwAXb3gAHWmPABtr
        iQAeaJMAJGaYABR1bAAdao4AFHVtABpthgATd2kAJGiYABpvhAAlaJgAEnhqABxuiwASemgAHW2QABtv
        iwARfGMAGXKCABhzgAAbcIsAGHSAACZslwAYdn4AGnOJAA2EVgAXeHsAJ26YACttmwAcc40AGnWHAAuH
        UAANhVcAGHiEABt3iwAVf3QAG3eNABh7ggAaeYoAKXSWABSCcAAaeooAGH6BABh/gAAYgH4AA5oxABKH
        bAAXgn0AK3qWACx6lwARi2gAEYxnAA+PYwAsfZYALX2XABiFhAAOk14AFYt3ABSPdAAXjIEAMIWVABKT
        cgAwhpYAC51WABKWcAA5hZwAMYiWADyInQARm2wAFZZ9ADKMlQAVmHsAFZl6ADSOlQAPoGcAFJ14AA6m
        ZAANq2EAA7g5ABKmdQA3mZUAEaxyADqfkwA6n5QAD7RuADyllAA9qJQAT6igAECvkwANwWkAQLCTAEO2
        kgAD1kIAV7ahAEW+kgAI2lwASMSRAFy+ogBLzZAATtWQAAP4TQBe/Y0Ag/6oAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAEhISEhISEhISEhISEhISEhISEhISEhINBwoWFhYWFhYWFhYWFwASEhISEhISEhISEhISZ2dn
        Z2dnZ2dnZ2dnZxISEhISEhISEhISEhISEhISEhISEhINBwoWFhYWFgcJCQwKChYWGRISEhISEhISEhIS
        Z2dnZ2dnZ2dnZ2dnZ2cSEhISEhISEhISEhISEhISEhISEhISBgoWFhYWBwkDEhISEw8MCgoVEhISEhIS
        EhISZ2dnZ2dnZ2dnZ2dnZ2dnEhISEhISEhISEhISEhISEhISEhISDgoKFhYWBwMSEhISEhISEhMLCgoS
        EhISEhISZ2dnZ2dnZ2dnZ2dnZ2dnZxISEhISEhISEhISEhISEhISEhISEggKFgoWBwMSEhISEhISEhIS
        EhgKChISEhISZ2dnZ2dnZ2dnZ2dnZ2dnZ4gSEhISEhISEhISEhISEhISEhISEg0HChYWCg4SEhISEhIS
        EhISEhISEQoEEhISZ2dnZ2dnZ2dnZ2dnZ2dnZ4iIZ2dnEhISEhISEhISEhISEhISEhIIChYWFgYSEhIS
        EhISEhISEhISEhAECgVnZ2dnZ2dnZ2dnZ2dnZ2dnZ4iIiGdnZ2dnZxISEhISEhISEhISEhISCAoWFhYB
        EhISEhISEhISEhISEhISKgQKQmdnZ2dnZ2dnZ2dnZ2dniIiIiIhnZ2dnZ2dnZ2dnZ2cSEhISEhISEggK
        FhYHAxISEhISEhISEhISEmdnZ0sEChtnZ2dnZ2dnZ2dnZ2dniIiIiIiIZ2dnZ2dnZ2dnZ2dnZ2dnZ2dn
        Z2dLChYWQGdnZ2dnZ2dnZ2dnZ2dnZ2dTBAQKQmdnZ2dnZ2dnZ2eIiIiIiIiIiGdnZ2dnZ2dnZ2dnZ2dn
        Z2dnZ2dnSwoWFkBnZ2dnZ2dnZ2dnZ2dnZ2dnZyoECj5nZ2dnZ2dnZ2eIiIiIiIiIiIhnZ2dnZ2dnZ2dn
        Z2dnZ2dnZ2dnZ1oKChZAZ2dnZ2dnZ2dnZ2dnZ2dnZ2dLBAobZ2dnZ2dnZ2dniIiIiIiIiIiIZ2dnZ2dn
        Z2dnZ2dnZ2dnZ2dnZ2dnKwoWQGdnZ2dnZ2dnZ2dnZ2dnZ2dnSwQECkJnZ2dnZ2eIiIiIiIiIiIiIiGdn
        Z2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ1oKCh9nZ2dnZ2dnZ2dnZ2dnZ2dnZ0sEBAo+Z2dnZ2eIiIiIiIiIiIiW
        lpaIiIhnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnNAoKRmdnZ2dnZ2dnZ2dnZ2dnZ2dLBAQKPmdnZ4iIiIiIiIiI
        iIiWlpaWiIiIiIiIiGdnZ2dnZ2dnZ2dnZ2dnZ2clCgpnZ2dnZ2dnZ2dnZ2dnZ2dZKAQECj5niIiIiIiI
        iIiIiIiWlpaWloiIiIiIiIiIiIiIiIiIiIhnZ2dnZ2dnZxwEFTlnZ2dnZ2dnZ2dnZ2dnSwQEBApiiIiI
        iIiIiIiIiIiWlpaWlpaIiIiIiIiIiIiIiIiIiIiIiIhnZ2dnZ2dnKAQKCzlnZ2dnZ2dnZ2dniGwEBAQK
        YoiIiIiIiIiIiIiWlpaWlpaWiIiIiIiIiIiIiIiIiIiIiIiIiIiIZ2dnZ2dIIgQKCzlnZ2dnZ4iIiHlB
        BAQKQXKIiIiIiIiIiIiWlpaWlpaWloiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIhBBAQKHlSIiIiI
        iIhsBAQECmKIiIiIiIiIiJaWlpaWlpaWlpaIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiGgsBAQE
        J0RUiIiIbAQEBApiiIiIiIiIiJaWlpaWlpaWlpaWiIiIiIiIiIiIiIiIiIiIiIiIiHlPT09PT09PRFSI
        iGgsBAQECh5UeUEEBApBcoiIiIiWlpaWlpaWlpaWlpaWloiIiIiIiIiIiIiIiIiIiIiIbU9BBAQEBAQE
        BAQKIYiIiGhNOwQEBB4KBAQKYoiIiIiWlpaWlpaWlpaWlpaWlp6WloiIiIiIiIiIiIiIiIh5RAoEBAQE
        BAQEBAQEBAQUiIiIiIhoMwQEBAoKCmKIiJaWlpaWlpaWlpaWlpaWlpaelpaWlpaWiIiIiIiIiHlPQQQE
        CgQEBApBUVFRUVEpCgKIiIiIiIhMCgQEBAogaZaWlpaWlpaWlpaWlpaWlp6enpaWlpaWlpaWlpaWiHlB
        BAQEBAQKCk1RcoiIiIiIiC8KBIiIiIiIXQQEBAQEBAQ1WGmWlpaWlpaWlpaWlp6enp6WlpaWlpaWlpaW
        lpZzBAQEBAQKQW6IiIiIiIiIiIiIMgoalpaWhAoEBApSZToEBAQKJpaWlpaWlpaWnp6enp6elpaWlpaW
        lpaWlpZ0CgQEBApSZIaWlpaWlpaWlpaWlocKCjGWlnMECgQKdJaWel9OBAQVWGmWlpaWnp6enp6enpaW
        lpaWlpaWlpaECgQKBApShpaWlpaWlpaWlpaWlpaWWAoWd4QKBAQKCoSWlpaWlno/BAQKJpaenp6enp6e
        np6WlpaWlpaWlpaWcwQKBAoKhJaWlpaWlpaWlpaWlpaWlocKFi5+BAoECnOWlpaWlpaWlnpHBAQVdZ6e
        np6enp6enp6enpaWlpaWhAoEBAoKfpaWlpaWlpaWlpaWlpaWlpaWZgoWWwQECgqElpaWlpaWlpaenolJ
        BAo8np6enp6enp6enp6enp6Wln4ECgQKc5aWlpaWlpaWlpaWlpaWlpaWln4KFkoEBApzlpaWlpaWlp6e
        np6enok4Cjeenp6enp6enp6enp6enp5zBAQKCoSWlpaWlpaWlpaWlpaWlpaWlpaHCgoKBAQKdJaWlp6e
        np6enp6enp6enmMKXp6enp6enp6enp6enp6OCgQECoGenp6WlpaWlpaWlpaWlpaWlpaWllgKBAoECnSW
        np6enp6enp6enp6enp6eiX+Znp6enp6enp6enp6eiwQKBAqFnp6enp6enp6enp6enp6enp6enp6TCgQE
        CgqOnp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enosEBAoKjp6enp6enp6enp6enp6enp6enp6e
        nlcEBAqBnp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6LBAQKgZ6enp6enp6enp6enp6enp6e
        np6enp5xBAQKhZ6enp6enp6enp6enp6enp6enp6enp6fn56enp6enp6eiwQECoWenp6enp6enp6enp6e
        np6enp6enp6ecQQECoWenp6enp6enp6enp6enp6enp6enp+fn5+fn5+enp6enosEBAqFnp6enp6enp6e
        np6enp6enp6enp6enokEBApgnp6enp6enp6enp6enp6enp6en5+fn5+fn5+fn5+fnp6LBAQKhZ6enp6e
        np6enp6enp6enp6enp6enp6eggQKXJ6enp6enp6enp6enp6en5+fn5+fn5+fn5+fn5+fn5+fmgQECoWe
        np6enp6enp6enp6enp6enp6enp6enp6CClyenp6enp6enp6fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+A
        BAqMn5+enp6enp6enp6enp6enp6enp6enp6enomOnp6enp+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+f
        n5+fkgQKjJ+fn5+fn5+fn56enp6enp6enp6enp6enp6enp6fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+f
        n5+fn5+fn5IEBFWfn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+f
        n5+fn5+fn5+fn5+aBAQKj5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+f
        n5+fn5+fn5+fn5+fn5+fn28ECoyfn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+f
        n5+fn5+fn5+fn5+fn5+fn5+fn5+aBAo9n5+fn5+fn5+fn5+fn5+fn5+fn5+fn52Vn5+fn5+fn5+fn5+f
        n5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn3YECo+fn5+fn5+fn5+fn5+fn5+fn5+fn5+SCoqfn5+fn5+f
        n5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fYQojn5+fn5+fn5+fn5+fn5+fn5+fn5+fkgoWip+f
        n5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn59FCiSfn5+fn5+fn5+fn5+fn5+fn5+fnGsK
        FhaVn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn0MVHZ+fn5+fn5+fn5+fn5+fn5+f
        nGsKFhYWjZ+fn5+fn5+fn5+fn5+fn5+fn5+fn5+gn5+fn5+fn5+fn5+fn5+fNgoKg5+fn5+fn5+fn5+f
        n5+fnGsKFhYWFo2fn5+fn5+fn5+fn5+fn5+fn5+foKCgoKCfn5+fn5+fn5+fn5+fn59DCgotg5+fn5+f
        n5+fn5+ceGsKFhYWFmuYn5+fn5+fn5+fn5+fn5+foKCgoKCgoKCgoKCgoKCfn5+fn5+fn5+fn2oKChYw
        eHCDn5+flHh4awoWFhYWFmuYn5+fn5+fn5+fn5+goKCgoKCgoKCgoKCgoKCgoKCgoKCfn5+fn5+fn5+f
        kFAKChYWFjB4cAoKFhYWFhYWFmuYn5+fn5+fn5+goKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oJ+fn5+fkFAKChYWFhYWFgoWFhYWa3yYn5+foKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgkXt9VgoKFhYWCnt9fZugoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCRe319fZegoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKCgoKCgoKCgoKCgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>